// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class StockTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void addStock() {
    // Test name: AddStock
    // Step # | name | target | value | comment
    // 1 | open | http://localhost:3000/viewStock |  | 
    driver.get("http://localhost:3000/viewStock");
    // 2 | setWindowSize | 1552x832 |  | 
    driver.manage().window().setSize(new Dimension(1552, 832));
    // 3 | click | linkText=Add Stock |  | 
    driver.findElement(By.linkText("Add Stock")).click();
    // 4 | click | name=productName |  | 
    driver.findElement(By.name("productName")).click();
    // 5 | type | name=productName | Table Tennis Ball | 
    driver.findElement(By.name("productName")).sendKeys("Table Tennis Ball");
    // 6 | click | name=quantity |  | 
    driver.findElement(By.name("quantity")).click();
    // 7 | type | name=quantity | 50 | 
    driver.findElement(By.name("quantity")).sendKeys("50");
    // 8 | click | name=price |  | 
    driver.findElement(By.name("price")).click();
    // 9 | type | name=price | 249 | 
    driver.findElement(By.name("price")).sendKeys("249");
    // 10 | click | name=submit |  | 
    driver.findElement(By.name("submit")).click();
  }
  @Test
  public void deleteStock() {
    // Test name: DeleteStock
    // Step # | name | target | value | comment
    // 1 | open | http://localhost:3000/viewStock |  | 
    driver.get("http://localhost:3000/viewStock");
    // 2 | setWindowSize | 1552x832 |  | 
    driver.manage().window().setSize(new Dimension(1552, 832));
    // 4 | click | name=delete19 |  | 
    driver.findElement(By.name("delete19")).click();
    // 5 | assertConfirmation | Do you want to delete? |  | 
    assertThat(driver.switchTo().alert().getText(), is("Do you want to delete?"));
    // 6 | webdriverChooseOkOnVisibleConfirmation |  |  | 
    driver.switchTo().alert().accept();
  }
  @Test
  public void updateStock() {
    // Test name: UpdateStock
    // Step # | name | target | value | comment
    // 1 | open | http://localhost:3000/viewStock |  | 
    driver.get("http://localhost:3000/viewStock");
    // 2 | setWindowSize | 1552x832 |  | 
    driver.manage().window().setSize(new Dimension(1552, 832));
    // 3 | click | id=update19 |  | 
    driver.findElement(By.id("update19")).click();
    // 4 | click | name=price |  | 
    driver.findElement(By.name("price")).click();
    // 5 | type | name=price | 259 | 
    driver.findElement(By.name("price")).sendKeys("259");
    // 6 | click | name=submit |  | 
    driver.findElement(By.name("submit")).click();
  }
}
